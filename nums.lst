     1                                  section .data
     2 00000000 68656C6C6F20776F72-         hl db 'hello world'
     2 00000009 6C64               
     3 0000000B 7B                          num db 123
     4                                      len equ $ - hl
     5 0000000C 41                          nums db 65
     6                                  section .bss
     7 00000000 <res Ah>                    strNum resb 10
     8                                  
     9                                  section .text
    10                                  global _start
    11                                  _start:
    12 00000000 8B0425[0B000000]            mov eax,dword [num]
    13 00000007 B900000000                  mov ecx,0
    14 0000000C BB0A000000                  mov ebx,10
    15                                  forloop:
    16 00000011 BA00000000                  mov edx,0
    17 00000016 F7F3                        div ebx
    18 00000018 52                          push rdx
    19 00000019 FFC1                        inc ecx
    20 0000001B 83F800                      cmp eax,0
    21 0000001E 75F1                        jne forloop
    22                                  
    23 00000020 48BB-                       mov rbx,strNum
    23 00000022 [0000000000000000] 
    24 0000002A BF00000000                  mov rdi,0
    25                                  poploop:
    26 0000002F 58                          pop rax
    27 00000030 0430                        add al,"0"
    28 00000032 88043B                      mov [rbx+rdi],al
    29 00000035 48FFC7                      inc rdi
    30 00000038 E2F5                        loop poploop
    31                                  
    32 0000003A C6043B00                    mov byte [rbx+rdi],0
    33 0000003E BA01000000                  mov edx, 1
    34 00000043 B9[0C000000]                mov ecx, nums
    35 00000048 BB01000000                  mov ebx, 1
    36 0000004D B804000000                  mov eax, 4
    37 00000052 CD80                        int 0x80
    38                                  
    39 00000054 B801000000                  mov eax, 1
    40 00000059 CD80                        int 0x80
