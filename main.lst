     1                                  %macro inter 1
     2                                      mov eax,dword [%1]
     3                                      mov ecx,0
     4                                      mov ebx,10
     5                                  %%forloop:
     6                                      mov edx,0
     7                                      div ebx
     8                                      push rdx
     9                                      inc ecx
    10                                      cmp eax,0
    11                                      jne %%forloop
    12                                  
    13                                      mov rbx,strNum
    14                                      mov rdi,0
    15                                  %%poploop:
    16                                      pop rax
    17                                      add al,"0"
    18                                      mov [rbx+rdi],al
    19                                      inc rdi
    20                                      loop %%poploop
    21                                  
    22                                      mov byte [rbx+rdi],0
    23                                      mov edx, 4
    24                                      mov ecx, strNum
    25                                      mov ebx, 1
    26                                      mov eax, 4
    27                                      int 0x80
    28                                  %endmacro
    29                                  section .data
    30 00000000 0A0000000A0000000A-         nums dd 10,10,10,10
    30 00000009 0000000A000000     
    31                                      len equ $-nums
    32                                  
    33                                  section .bss 
    34 00000000 ????????                    strNum resb 4
    35 00000004 ????????                    sum resb 4
    36 00000008 ????????                    ave resb 4
    37                                  extern stats
    38                                  section .text
    39                                  global _start
    40                                  _start:
    41 00000000 48BF-                       mov rdi,nums
    41 00000002 [0000000000000000] 
    42 0000000A BE04000000                  mov rsi,4
    43 0000000F 48BA-                       mov rdx,sum
    43 00000011 [0400000000000000] 
    44 00000019 48B9-                       mov rcx,ave
    44 0000001B [0800000000000000] 
    45 00000023 E8(00000000)                call stats
    46                                      inter sum
     2 00000028 8B0425[04000000]    <1>  mov eax,dword [%1]
     3 0000002F B900000000          <1>  mov ecx,0
     4 00000034 BB0A000000          <1>  mov ebx,10
     5                              <1> %%forloop:
     6 00000039 BA00000000          <1>  mov edx,0
     7 0000003E F7F3                <1>  div ebx
     8 00000040 52                  <1>  push rdx
     9 00000041 FFC1                <1>  inc ecx
    10 00000043 83F800              <1>  cmp eax,0
    11 00000046 75F1                <1>  jne %%forloop
    12                              <1> 
    13 00000048 48BB-               <1>  mov rbx,strNum
    13 0000004A [0000000000000000]  <1>
    14 00000052 BF00000000          <1>  mov rdi,0
    15                              <1> %%poploop:
    16 00000057 58                  <1>  pop rax
    17 00000058 0430                <1>  add al,"0"
    18 0000005A 88043B              <1>  mov [rbx+rdi],al
    19 0000005D 48FFC7              <1>  inc rdi
    20 00000060 E2F5                <1>  loop %%poploop
    21                              <1> 
    22 00000062 C6043B00            <1>  mov byte [rbx+rdi],0
    23 00000066 BA04000000          <1>  mov edx, 4
    24 0000006B B9[00000000]        <1>  mov ecx, strNum
    25 00000070 BB01000000          <1>  mov ebx, 1
    26 00000075 B804000000          <1>  mov eax, 4
    27 0000007A CD80                <1>  int 0x80
    47 0000007C B801000000                  mov eax,1
    48 00000081 CD80                        int 0x80
